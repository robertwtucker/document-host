// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "github.com/robertwtucker/document-host/pkg/model"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, doc
func (_m *Repository) Create(ctx context.Context, doc *model.Document) (*model.Document, error) {
	ret := _m.Called(ctx, doc)

	var r0 *model.Document
	if rf, ok := ret.Get(0).(func(context.Context, *model.Document) *model.Document); ok {
		r0 = rf(ctx, doc)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.Document)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *model.Document) error); ok {
		r1 = rf(ctx, doc)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: ctx, id
func (_m *Repository) Get(ctx context.Context, id string) (*model.File, error) {
	ret := _m.Called(ctx, id)

	var r0 *model.File
	if rf, ok := ret.Get(0).(func(context.Context, string) *model.File); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*model.File)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
